%This function splits the dataset in identification and validation subsets according to odd and even indexes (idx_o and idx_e)
function [consumptions_I,consumptions_V]= splitdataset(consumptions,idx)
tmp=0;
idx_o=[];
idx_e=[];
for i=1:365
    tmp=tmp(end)+idx;
    if ~mod(i,2)
    idx_e=[idx_e;tmp];
    else
    idx_o=[idx_o;tmp];
    end
end
consumptions_I=consumptions(idx_o,:);
consumptions_V=consumptions(idx_e,:);




%This function perform a linear regression model based on the estimated total average demand (dtot) and the mean demand of each selected users (dtotSM)
function [X] = identify(data,consumptions,selected)
dtot=sum(sum(consumptions,2)); 
N=length(selected);
idx=find(ismember(data(:,1),selected));
input=consumptions(:,idx);
dtotSM=sum(input,1);
X= dtot./(N*dtotSM);
X=X';
end




%This function assesses the R2 of the fit between total measured demands and generated demands (dsim)
function [R2,dsim]=Verify(data,selected,consumptions,X)
dsim=[];
dtot=sum(consumptions,2);
idx=find(ismember(data(:,1),selected));
input=consumptions(:,idx);
dsim=input*X;
R2=rsquare(dtot,dsim);




%The following functions allow to apply the criteria for the selection of the n, nr and nnr users to be monitored among all, residential and non-residential users respectively.Such criteria refer to the cumulative frequency distributions of usersâ€™ total (Ft), residential (Fr) and non-residential (Fnr) billed annual demand.
%Criterion 1: n users are randomly selected
function [selected1]=Criterion1(data,n)
ntot=size(data,1);
idx=randi(ntot,n,1);
selected1=data(idx,1);




%Criterion 2: selection of 20% of n users with Ft ranging from 0.5 to 0.75 and 80% of n among users with Ft > 0.75
function [selected2, n_over] = Criterion2(data,n)
n5_75=round(0.2*n);
n75_1=n-n5_75;
datasort=sortrows(data,3);
ntot=size(data,1);
idx5_75=randi(ceil([0.5,0.75]*ntot),n5_75,1);
idx75_1=randi(ceil([0.75,1]*ntot),n75_1,1);
selected2=datasort(idx5_75,1);
selected2=[selected2; datasort(idx75_1,1)];
n_over=n-length(selected2); 
end




%Criterion 3: Selection of n among users with Ft > 0.5
function [selected3] = Criterion3(data,n)
datasort=sortrows(data,3);
ntot=size(data,1);
idx5_1=randi(ceil([0.5,1]*ntot),n,1);
selected3=datasort(idx5_1,1);
end




% Criterion 4: selection of the n users with the highest values of the mean daily demand among all users
function [selected4]=Criterion4(data,n)
datasort=sortrows(data,3);
selected4=datasort(end-n+1:end,1);




%Criterion 5: Selection of 20% of nr among the users with Fr ranging from 0.5 to 0.75 and 80% of nr among users with Fr > 0.75, selection of the remaining nnr applying the same criterion referring to the Fnr
function [selected5, n_over] = Criterion5(data1,data2,n,t1)
n1=round(t1*n);
n2=n-n1;
[selected5R] = Criterion2(data1,n1);
[selected5NR] = Criterion2(data2,n2);
selected5=[selected5R;selected5NR];
n_over=n-length(selected5);




%Criterion 6: selection of nr among users with Fr > 0.5, the remaining nnr are selected applying the same criterion referring to the Fnr
function [selected6,n_over] = Criterion6(data1,data2,n,t1,t2)
datasort1=sortrows(data1,3);
datasort2=sortrows(data2,3);
ntot1=size(data1,1);
ntot2=size(data2,1);
n1=round(t1*n);
n2=n-n1;
idx5_1=randi(ceil([0.5,1]*ntot1),n1,1);
selected6R=datasort1(idx5_1,1);
idx5_1=randi(ceil([0.5,1]*ntot2),n2,1);
selected6NR=datasort2(idx5_1,1);
selected6=[selected6R;selected6NR];
n_over=n-length(selected6);
end




%Criterion 7: selection of the nr with the highest values of the mean daily demand among the residential users, the remaining nnr are those with the highest values of the mean daily demand among the non-residential users
function [selected7,n_over]=Criterion7(data1,data2,n,t1,t2)
datasort1=sortrows(data1,3);
datasort2=sortrows(data2,3);
n1=round(t1*n);
n2=n-n1;
selected7R=datasort1(end-n1+1:end,1);
selected7NR=datasort2(end-n2+1:end,1);
selected7=[selected7R; selected7NR];
n_over=n-length(selected7);
