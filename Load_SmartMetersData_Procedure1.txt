%% load data

addpath('data')

fname='SeriesSM.txt';
init_date_string='20-Mar-2017 00:00:00';
[SmartMetersSeries, SmartMetersMatrix] = loadSmartMetersSeries(fname,init_date_string);

%% Compute overall consumption

ConsumptionMatrix=sum(SmartMetersMatrix,2);
Consumption=timeseries(ConsumptionMatrix,SmartMetersSeries(1).time);
Consumption.DataInfo.Units=SmartMetersSeries(1).DataInfo.Units;
Consumption.Name=['Cumulative Consumption'];
Consumption.TimeInfo=SmartMetersSeries(1).TimeInfo;



function [SmartMetersSeries, SmartMetersMatrix] = loadSmartMetersSeries(fname,init_date_string)

%Loads SmartMetersSeries from .txt file. 
%Row: time sample, Column: SmartMeter.
%Data must be sampled with Ts=1 hour (TODO for different Ts)
%Inputs
%fname:filename or path with extension
%init_date_string: string (format: 'dd-mmm-yyyy HH:MM:SS') defining time for the first sample.
%Outputs
%SmartMetersSeries: of timeseries for each smartmeter
%SmartMetersMatrix: matrix with samples from smartmeters signals (column=time sample, row=smartmeter)

SmartMetersMatrix=load(fname)
start_time=datenum(init_date_string,'dd-mmm-yyyy HH:MM:SS')
time=start_time:(1/24):(start_time+((size(SmartMetersMatrix,1)-1)/24));

for i=1:size(SmartMetersMatrix,2)
    SmartMetersSeries(i)=timeseries(SmartMetersMatrix(:,i),time);
    SmartMetersSeries(i).DataInfo.Units='l';
    SmartMetersSeries(i).Name=['Consumption SmartMeter ',num2str(i)];
    SmartMetersSeries(i).TimeInfo.Units='days';
    SmartMetersSeries(i).TimeInfo.Format='dd-mmm-yyyy HH:MM:SS';
    SmartMetersSeries(i).TimeInfo.StartDate=datestr(0);
end
end